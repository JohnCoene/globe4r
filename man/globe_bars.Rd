% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points.R
\name{globe_bars}
\alias{globe_bars}
\title{Bars}
\usage{
globe_bars(
  globe,
  ...,
  data = NULL,
  inherit_coords = TRUE,
  on_click = NULL,
  on_right_click = NULL,
  on_hover = NULL
)
}
\arguments{
\item{globe}{An object of class \code{globe} as returned by
\code{\link{create_globe}}, or an object of class \code{globeProxy}
as returned by \code{\link{globeProxy}}.}

\item{...}{Coordinates, as specified by \code{\link{coords}}.}

\item{data}{A data.frame of points to draw.}

\item{inherit_coords}{Whether to inherit the coordinates (\code{\link{coords}})
from \code{\link{create_globe}}. Only applies to method applied to object of class
\code{globe4r} not on objects of class \code{globeProxy}.}

\item{on_click, on_right_click, on_hover}{JavaScript functions as \link[htmlwidgets]{JS} 
or \code{TRUE} to pick up the event from Shiny server side, see example.}
}
\description{
Add bars to a globe.
}
\section{Coordinates}{

Valid coordinates (depending on layer).
\itemize{
  \item{\code{lat}, \code{lon}},
  \item{\code{altitude}}
  \item{\code{radius}}
  \item{\code{color}}
  \item{\code{label}}
  \item{\code{resolution}}
  \item{\code{merge}}
  \item{\code{transition}}
}
}

\examples{
# basic
create_globe() \%>\% 
  globe_pov(-21, 179) \%>\% 
  globe_bars(coords(lat, long, altitude = mag), data = quakes)

# use in shiny
library(shiny)

ui <- fluidPage(
  actionButton("add", "Add points"),
  globeOutput("globe"),
  verbatimTextOutput("clicked")
)

server <- function(input, output){
  output$globe <- renderGlobe({
    create_globe() \%>\% globe_img_url()
  })

  observeEvent(input$add, {
    globeProxy("globe") \%>\% 
      globe_bars(coords(lat, long), data = quakes, on_click = TRUE) \%>\% 
      globe_pov(-21, 179)
  })

  output$clicked <- renderPrint({
    input$globe_click_bar
  })
}

if(interactive()) shinyApp(ui, server)
}
