% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points.R
\name{points_data}
\alias{points_data}
\alias{points_lat}
\alias{points_lon}
\alias{points_color}
\alias{points_altitude}
\alias{points_radius}
\alias{points_resolution}
\title{Points Functional API}
\usage{
points_data(globe, data)

points_lat(globe, lat)

points_lon(globe, lon)

points_color(globe, color)

points_altitude(globe, altitude)

points_radius(globe, radius)

points_resolution(globe, resolution)
}
\arguments{
\item{globe}{An object of class \code{globe} as returned by
\code{\link{create_globe}}, or an object of class \code{globeProxy}
as returned by \code{\link{globeProxy}}.}

\item{data}{A data.frame of points to draw.}

\item{lat, lon}{Column names or numeric value indicating coordinates.}

\item{color}{Column name or character vector indicating color of points.}

\item{altitude}{Column name or character vector indicating altitude of points 
in terms of globe radius units (0 = 0 altitude (flat circle), 1 = globe radius).}

\item{radius}{Column name of radius a numeric constant for the cylinder's 
radius, in angular degrees.}

\item{resolution}{Numeric value defining the geometric resolution of each 
cylinder, expressed in how many slice segments to divide the circumference. 
Higher values yield smoother cylinders.}
}
\description{
Functional API to add and customise points on globe.
}
\examples{
# use data
create_globe() \%>\% 
  globe_img_url() \%>\% 
  points_data(quakes) \%>\% 
  points_lat("lat") \%>\% 
  points_lon("long")

# use in shiny
library(shiny)

ui <- fluidPage(
  actionButton("draw", "draw points"),
  globeOutput("globe")
)

server <- function(input, output) {
  output$globe <- renderGlobe({
    create_globe() \%>\% 
      globe_img_url() \%>\% 
      points_color(htmlwidgets::JS("() => '#ffffff'")) 
  })

  observeEvent(input$draw, {
    globeProxy("globe") \%>\% 
      points_data(quakes) \%>\% 
      points_lon("long") \%>\% 
      globe_pov(-21, 179)
  })
}

\dontrun{shinyApp(ui, server)}

}
