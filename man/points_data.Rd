% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/points.R
\name{points_data}
\alias{points_data}
\alias{points_lat}
\alias{points_lon}
\alias{points_color}
\alias{points_altitude}
\alias{points_radius}
\alias{points_resolution}
\alias{points_merge}
\alias{points_transition}
\alias{points_on_click}
\alias{points_on_right_click}
\alias{points_on_hover}
\title{Points Functional API}
\usage{
points_data(globe, data)

points_lat(globe, lat)

points_lon(globe, lon)

points_color(globe, color)

points_altitude(globe, altitude = 0.1)

points_radius(globe, radius = 0.25)

points_resolution(globe, resolution = 12L)

points_merge(globe, merge = TRUE)

points_transition(globe, transition = 1000L)

points_on_click(globe, func)

points_on_right_click(globe, func)

points_on_hover(globe, func)
}
\arguments{
\item{globe}{An object of class \code{globe} as returned by
\code{\link{create_globe}}, or an object of class \code{globeProxy}
as returned by \code{\link{globeProxy}}.}

\item{data}{A data.frame of points to draw.}

\item{lat, lon}{Column names or numeric value indicating coordinates.}

\item{color}{Column name or character vector indicating color of points.}

\item{altitude}{Column name or character vector indicating altitude of points 
in terms of globe radius units (0 = 0 altitude (flat circle), 1 = globe radius).}

\item{radius}{Column name of radius a numeric constant for the cylinder's 
radius, in angular degrees.}

\item{resolution}{Numeric value defining the geometric resolution of each 
cylinder, expressed in how many slice segments to divide the circumference. 
Higher values yield smoother cylinders.}

\item{merge}{Whether to merge all the point meshes 
into a single ThreeJS object, for improved rendering performance. 
Visually both options are equivalent, setting this option only affects 
the internal organization of the ThreeJS objects.}

\item{transition}{Duration (ms) of the transition 
to animate point changes involving geometry modifications. A value of 
\code{0} will move the objects immediately to their final position. 
New objects are animated by scaling them from the ground up. Only works 
if \code{merge} is disabled.}

\item{func}{JavaScript function as character vector.}
}
\description{
Functional API to add and customise points on globe.
}
\examples{
# use data
create_globe() \%>\% 
  globe_img_url() \%>\% 
  points_data(quakes) \%>\% 
  points_lat("lat") \%>\% 
  points_lon("long")

# use in shiny
library(shiny)

ui <- fluidPage(
  actionButton("draw", "draw points"),
  globeOutput("globe")
)

server <- function(input, output) {
  output$globe <- renderGlobe({
    create_globe() \%>\% 
      globe_img_url() \%>\% 
      points_color(htmlwidgets::JS("() => '#ffffff'")) 
  })

  observeEvent(input$draw, {
    globeProxy("globe") \%>\% 
      points_data(quakes) \%>\% 
      points_lon("long") \%>\% 
      globe_pov(-21, 179)
  })
}

\dontrun{shinyApp(ui, server)}

}
