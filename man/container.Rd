% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{container}
\alias{container}
\alias{globe_dimensions}
\alias{globe_background}
\title{Dimensions & Background}
\usage{
globe_dimensions(globe, width = NULL, height = NULL)

globe_background(globe, color = "#000011")
}
\arguments{
\item{globe}{An object of class \code{globe} as returned by
\code{\link{create_globe}}, or an object of class \code{globeProxy}
as returned by \code{\link{globeProxy}}.}

\item{width, height}{An integer defining the number of pixels.}

\item{color}{A valid hex code or color name.}
}
\description{
Customise the dimensions and background color of the visualisation.
}
\examples{
# basic
create_globe() \%>\% 
  globe_img_url() \%>\% 
  globe_dimensions(250, 250) \%>\% 
  globe_background("#000")

# use in shiny
library(shiny)

ui <- fluidPage(
  sliderInput(
    "width", 
    "Change width", 
    min = 300, 
    max = 900, 
    step = 50, 
    value = 250
  ), 
  globeOutput("globe")
)

server <- function(input, output){
  output$globe <- renderGlobe({
    create_globe() \%>\% 
      globe_img_url()
  })

  observeEvent(input$width, {
    globeProxy("globe") \%>\% 
      globe_dimensions(width = input$width)
  })
}

if(interactive()) shinyApp(ui, server)

}
